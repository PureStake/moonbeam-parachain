name: Publish draft release

on: ["push"]

jobs:
  env:
    GITHUB_SHA_SHORT: ${GITHUB_SHA::8}
  build-runtimes:
    runs-on: ubuntu-latest
    env:
      PARACHAIN_BINARY: target/release/moonbase-testnet
      PARACHAIN_SPEC_TMP: /tmp/parachain-tmp-specs.json
      PARACHAIN_SPEC_TEMPLATE: specs/moonbase-testnet-parachain-spec-template.json
      PARACHAIN_SPEC_PLAIN: artifacts/parachain-specs-$GITHUB_SHA_SHORT-plain.json
      PARACHAIN_SPEC_RAW: artifacts/parachain-specs-$GITHUB_SHA_SHORT-raw.json
      PARACHAIN_WASM: artifacts/parachain-runtime-$GITHUB_SHA_SHORT.wasm
      PARACHAIN_GENESIS: artifacts/parachain-genesis-$GITHUB_SHA_SHORT.txt
      PARACHAIN_ID: 1000
    steps:
    - name: Create artifacts folder
      run: mkdir artifacts
    - uses: actions/checkout@v2
    - name: Submodules
      run: git submodule update --init --recursive
    - name: Cache Rust dependencies
      uses: actions/cache@v1.1.2
      with:
        path: target
        key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.OS }}-build-
    - uses: actions-rs/toolchain@v1
      with:
        target: wasm32-unknown-unknown
        toolchain: nightly
        default: true
    - name: Build
      run: cargo build --release --verbose --all
    - name: Upload moonbase-testnet node
      uses: actions/upload-artifact@v2
      with:
        name: moonbase-testnet
        path: target/release/moonbase-testnet
    - name: Generate parachain specs, wasm and genesis
      run: scripts/generate-specs.sh
    - name: Upload artefacts
      uses: actions/upload-artifact@v2
      with:
        path: artifacts/*